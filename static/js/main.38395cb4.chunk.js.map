{"version":3,"sources":["components/navbar/navbar.js","components/common/div-link/div-link.js","components/home/highlights/sector-highlights/sector-highlights.js","components/home/highlights/most-active-highlights/most-active-highlights.js","components/home/home-highlight.js","components/home/home.js","components/about/about.js","components/contact/contact.js","components/navigation/navigation.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","id","className","NavLink","to","type","placeholder","href","style","float","color","DivLink","this","props","textDecoration","outline","content","React","Component","SectorHighlights","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","highlights","_this2","best","_","maxBy","r","performance","worst","minBy","getBackgroundImageStyleForSector","name","then","bestBackgroundImageStyle","concat","push","div_link","key","worstBackgroundImageStyle","setState","sector","Promise","res","rej","sectorStr","replace","toLowerCase","path","img","Image","src","onload","backgroundImage","onerror","MostActiveHighlights","length","forEach","highlight","symbol","companyName","latestPrice","changePercent","HomeHighlight","highlightTypes","sectorHighlights","mostActiveHighlights","_this$props","highlightType","HighlightWrapper","Home","isLoading","error","fetch","results","json","lastUpdated","Date","setMilliseconds","sectorHighlightsLastUpdatedTimestamp","toLocaleString","latestUpdate","mostActiveHighlightsLastUpdatedTimestamp","catch","err","console","log","loading","navbar_navbar","today","fontSize","display","toLocaleDateString","home_highlight","About","Contact","Navigation","HashRouter","Route","exact","component","App","navigation","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38395cb4.chunk.js","sourcesContent":["import React from 'react';\nimport './navbar.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <div>\n      <nav id='wide-nav'>\n        <div className=\"logo\">\n          <NavLink to=\"/\">$M</NavLink>\n        </div>\n        <input className=\"search-bar\" type=\"text\" placeholder=\"Search..\"></input>\n        <div className=\"dropdown\">\n          <div className=\"dropdown-arrow\"></div>          \n          <div className=\"dropdown-menu\">\n            <ul>\n              <li><NavLink to=\"/\">Home</NavLink></li>\n              <li><a href=\"/\">Stocks</a></li>\n              <li><a href=\"/\">Earnings</a></li>\n              <li><a href=\"/\">Dividends</a></li>\n              <li><a href=\"/\">Key Stats</a></li>\n              <li><a href=\"/\">IPO Calendar</a></li>\n            </ul>\n            <ul>\n              <li><NavLink to=\"/about\">About</NavLink></li>\n              <li><NavLink to=\"/contact\">Contact</NavLink></li>\n            </ul>            \n          </div>\n        </div>\n      </nav>    \n      \n      {/* mobile nav     */}\n      <nav id='mobile-nav'>\n        <div className=\"logo\">\n          <NavLink to=\"/\">$M</NavLink>\n        </div>\n        <h1 style={{float: 'right', color: 'purple'}}>TODO</h1>\n      </nav>    \n    </div>\n  );  \n}\n\nexport default Navbar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nclass DivLink extends React.Component {\n\n  static propTypes = {\n    content: PropTypes.element.isRequired,\n    href: PropTypes.string.isRequired\n  }\n\n  render() {\n    let style = {\n        textDecoration: 'none',\n        outline: 'none',\n        color: 'inherit'\n    };\n\n    return (\n      <NavLink to={this.props.href} style={style}>{this.props.content}</NavLink>\n    );\n  }\n}\n\nexport default DivLink;","import React from 'react';\nimport './sector-highlights.css';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport DivLink from '../../../common/div-link/div-link';\n\nclass SectorHighlights extends React.Component {\n\n  static propTypes = {\n    highlights: PropTypes.array.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlights: []\n    };\n  }\n\n  // componentWillMount() {\n  //   let best = _.maxBy(this.props.highlights, r => r.performance);\n  //   let worst = _.minBy(this.props.highlights, r => r.performance);\n\n  //   let highlights = [];\n\n  //   this.getBackgroundImageStyleForSector(best.name)\n  //   .then((bestBackgroundImageStyle) => {\n  //     highlights.push(\n  //       <div key='best' id='best.name' className='highlight-container' style={bestBackgroundImageStyle}>\n  //         <h5>{best.name}</h5>\n  //         <p className='highlight-performance-marker highlight-performance-increased'>{best.performance > 0 ? `+${best.performance}` : best.performance}</p>\n  //       </div>);\n  //     return this.getBackgroundImageStyleForSector(worst.name)\n  //   })\n  //   .then((worstBackgroundImageStyle) => {\n  //     highlights.push(\n  //       <div key='worst' id='worst.name' className='highlight-container' style={worstBackgroundImageStyle}>\n  //         <h5>{worst.name}</h5>\n  //         <p className='highlight-performance-marker highlight-performance-decreased'>{worst.performance}</p>\n  //       </div>);\n\n  //     this.setState({\n  //       highlights: highlights\n  //     });  \n  //   });\n  // }  \n\n  componentWillMount() {\n    let best = _.maxBy(this.props.highlights, r => r.performance);\n    let worst = _.minBy(this.props.highlights, r => r.performance);\n\n    let highlights = [];\n\n    this.getBackgroundImageStyleForSector(best.name)\n    .then((bestBackgroundImageStyle) => {\n      let content = (\n        <div className='highlight-container' style={bestBackgroundImageStyle}>\n          <h5>{best.name}</h5>\n          <p className='highlight-performance-marker highlight-performance-increased'>{best.performance > 0 ? `+${best.performance}` : best.performance}</p>\n        </div>        \n      );\n      highlights.push(\n        <DivLink key='best' content={content} href='/about'/>\n      );\n      return this.getBackgroundImageStyleForSector(worst.name)\n    })\n    .then((worstBackgroundImageStyle) => {\n      let content = (\n        <div className='highlight-container' style={worstBackgroundImageStyle}>\n          <h5>{worst.name}</h5>\n          <p className='highlight-performance-marker highlight-performance-decreased'>{worst.performance}</p>\n        </div>\n      );\n      highlights.push(\n        <DivLink key='worst' content={content} href='/about'/>\n      );\n\n      this.setState({\n        highlights: highlights\n      });  \n    });\n  }    \n\n  getBackgroundImageStyleForSector(sector) {\n    return new Promise((res, rej) => {\n      let sectorStr = sector.replace(' ', '-');\n      sectorStr = sectorStr.toLowerCase();\n      let path = `/images/sectors/${sectorStr}.jpg`;\n\n      let img = new Image();\n      img.src = path;\n      img.onload = () => { res({backgroundImage: `url(${path})`})};\n      img.onerror = () => { res({backgroundImage: `url(${path.replace('.jpg', '.jpeg')})`}) }; \n    });\n  }\n\n  render() {\n    return (\n      <div className='sector-highlights'>\n        {this.state.highlights}\n      </div>\n    );\n  }\n}\n\nexport default SectorHighlights;","import React from 'react';\nimport './most-active-highlights.css';\nimport '../../../../common.css';\nimport PropTypes from 'prop-types';\nimport DivLink from '../../../common/div-link/div-link';\n\nclass MostActiveHighlights extends React.Component {\n\n  static propTypes = {\n    highlights: PropTypes.array.isRequired\n  }\n\n  render() {\n    if(this.props.highlights.length === 0) {\n      return (\n        <div className='most-active-highlights-container'>\n          <h5>Market is currently closed</h5>\n        </div>        \n      );\n    }\n\n    let highlights = [];\n    this.props.highlights.forEach(highlight => {\n      let content = (\n        <div>\n          <div className='most-active-highlights-column-header'>\n            <h5>{highlight.symbol}</h5>\n            <p>{highlight.companyName}</p>\n          </div>\n          <div className='most-active-highlights-column-footer center-div'>\n            <h5>{highlight.latestPrice}</h5>\n            <p style={highlight.changePercent < 0 ? {color: 'red'} : {color: 'green'}}>\n              {highlight.changePercent < 0 ? '-' : '+'}{highlight.changePercent}\n            </p>\n          </div>\n        </div>\n      );\n\n      highlights.push(\n        <div className='most-active-highlights-column' key={highlight.symbol}>\n          <DivLink content={content} href='/about'/>\n        </div>\n      );\n    });\n\n    return(\n      <div className='most-active-highlights-container'>\n        <div className='most-active-highlights-table'>\n          <div className='most-active-highlights-row'>\n            {highlights}\n          </div>\n        </div>      \n      </div>\n    );\n  }\n}\n\nexport default MostActiveHighlights;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectorHighlights from './highlights/sector-highlights/sector-highlights.js';\nimport MostActiveHighlights from './highlights/most-active-highlights/most-active-highlights.js';\n\nclass HomeHighlight extends React.Component {\n  static propTypes = {\n    highlightType: PropTypes.string.isRequired,\n    highlights: PropTypes.array.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.highlightTypes = {\n      sectorHighlights: SectorHighlights,\n      mostActiveHighlights: MostActiveHighlights\n    };\n  }\n\n  render() {\n    const {highlightType, highlights} = this.props;\n    let HighlightWrapper = this.highlightTypes[highlightType];\n    return (\n      <div className='home-highlight-container'>\n        <HighlightWrapper highlights={highlights}/>\n      </div>\n    );\n  }\n}\n\nexport default HomeHighlight;","import React from 'react';\nimport './home.css';\nimport Navbar from './../navbar/navbar.js';\nimport _ from 'lodash';\nimport HomeHighlight from './home-highlight';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      error: false,\n      sectorHighlights: [],\n      mostActiveHighlights: []\n    }\n  }\n\n  componentWillMount() {\n    this.setState({isLoading: true});\n    fetch('https://api.iextrading.com/1.0/stock/market/sector-performance')\n    .then(results => results.json().then(results => {\n      let lastUpdated = new Date(0);\n      lastUpdated.setMilliseconds(_.maxBy(results, r => r.lastUpdated).lastUpdated);\n      this.sectorHighlightsLastUpdatedTimestamp = lastUpdated.toLocaleString();\n\n      this.setState({ sectorHighlights: results });\n\n      return fetch('https://api.iextrading.com/1.0/stock/market/list/mostactive');\n    }))\n    .then(results => results.json().then(results => {\n      let lastUpdated;\n      if(results.length === 0) {\n        lastUpdated = new Date();\n      } else {\n        lastUpdated = new Date(0);\n        lastUpdated.setMilliseconds(_.maxBy(results, r => r.latestUpdate).latestUpdate);        \n      }\n\n      this.mostActiveHighlightsLastUpdatedTimestamp = lastUpdated.toLocaleString();\n      this.setState({ mostActiveHighlights: results });\n\n      this.setState({ isLoading: false });\n    }))\n    .catch(err => console.log(err));    \n  }\n\n  render() {\n    let loading = (\n      <div>\n        <Navbar/>\n        <div className=\"content-container\">\n          <h5>loading...</h5>\n        </div>\n      </div>);\n\n    let error = (\n      <div>\n        <Navbar/>\n        <div className=\"content-container\">\n          <h5>ERROR</h5>\n        </div>\n      </div>);\n\n    if(this.state.isLoading)\n      return loading;\n\n    if(this.state.error)\n      return error;\n\n    let today = new Date();\n\n    return (\n      <div>\n        <Navbar/>\n        <div className='content-container'>\n          <h1>Today's View<span><p style={{fontSize: '12px', display: 'inline'}}> - {today.toLocaleDateString()}</p></span></h1>\n          <hr className=\"content-seperator\"/>\n          <h1 className='section-header'>Most Active</h1>\n          <h5>Last Updated: {this.mostActiveHighlightsLastUpdatedTimestamp}</h5>\n          <HomeHighlight highlightType='mostActiveHighlights' highlights={this.state.mostActiveHighlights}/>\n          <hr className=\"content-seperator\"/>\n          <h1 className='section-header'>Sector Highlights</h1>\n          <h5>Last Updated: {this.sectorHighlightsLastUpdatedTimestamp}</h5>\n          <HomeHighlight highlightType='sectorHighlights' highlights={this.state.sectorHighlights}/>\n          <hr className=\"content-seperator\"/>\n          <h1>More to come!</h1>\n\n          {/* <h1>TODO: Biggest Gainers</h1>\n          <h1>TODO: Biggest Losers</h1>\n          <h1>TODO: News Links</h1> */}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport Navbar from './../navbar/navbar.js';\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div>\n        <Navbar/>\n        <h1>About</h1>\n      </div>\n    );\n  }\n}\n\nexport default About;","import React from 'react';\nimport Navbar from './../navbar/navbar.js';\n\nclass Contact extends React.Component {\n  render() {\n    return (\n      <div>\n        <Navbar/>\n        <h1>Contact</h1>\n      </div>\n    );\n  }\n}\n\nexport default Contact;","import React from 'react';\nimport {\n  Route,\n  HashRouter\n} from 'react-router-dom';\nimport Home from './../home/home.js';\nimport About from './../about/about.js';\nimport Contact from './../contact/contact.js';\n\nconst Navigation = () => {\n  return (\n    <HashRouter>\n      <div>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/contact\" component={Contact}/>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/navigation.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"app\">\n        <Navigation/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}